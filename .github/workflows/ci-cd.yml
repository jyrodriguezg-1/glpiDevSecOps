# .github/workflows/ci-cd.yml
name: CI/CD – Build, Push & Deploy

on:
  push:
    branches: [master]

env:
  REGISTRY: docker.io
  IMAGE_NAME_APP: ${{ secrets.DOCKERHUB_USERNAME }}/glpi-app
  IMAGE_NAME_DB:  ${{ secrets.DOCKERHUB_USERNAME }}/glpi-db
  IMAGE_NAME_BOT: ${{ secrets.DOCKERHUB_USERNAME }}/glpi-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set IMAGE_DATE
        run: echo "IMAGE_DATE=$(date +'%Y%m%d')" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push app
        uses: docker/build-push-action@v5
        with:
          context: ./glpi-app
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP }}:${{ env.IMAGE_DATE }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP }}:latest

      - name: Build & push db
        uses: docker/build-push-action@v5
        with:
          context: ./glpi-db
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DB }}:${{ env.IMAGE_DATE }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DB }}:latest

      - name: Build & push bot
        uses: docker/build-push-action@v5
        with:
          context: ./glpi-bot
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BOT }}:${{ env.IMAGE_DATE }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BOT }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          install_components: gcloud

      - name: Pull & restart on VM
        run: |
          gcloud compute ssh jyrodriguezg@${{ secrets.GCP_INSTANCE }} \
            --zone=${{ secrets.GCP_ZONE }} \
            --command "
              cd ~/glpiDevSecOps
              # actualiza tu .env.prod si cambias variables
              docker compose down
              # baja las últimas imágenes que acabas de publicar
              docker compose pull
              # levanta todo de nuevo
              docker compose up -d --remove-orphans
            "
